import React, { useState } from 'react';

const DeleteEducation = () => {
  const [highestDegree, setHighestDegree] = useState('');
  const [educationLevel, setEducationLevel] = useState('');

  const handleDelete = async (e) => {
    e.preventDefault();

    // Create JSON object with highest_degree and education_level
    const educationData = {
      highest_degree: highestDegree,
      education_level: educationLevel,
    };

    try {
      const response = await fetch('https://your-api-endpoint.com/delete', {
        method: 'DELETE', // Use DELETE method
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(educationData), // Send the data as JSON in the request body
      });

      if (response.ok) {
        // Handle success
        const data = await response.json();
        console.log('Row deleted successfully:', data);
      } else {
        // Handle error
        const error = await response.json();
        console.error('Error deleting row:', error);
      }
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <form onSubmit={handleDelete}>
      <div>
        <label>
          Highest Degree:
          <input
            type="text"
            value={highestDegree}
            onChange={(e) => setHighestDegree(e.target.value)}
          />
        </label>
      </div>
      <div>
        <label>
          Education Level:
          <input
            type="text"
            value={educationLevel}
            onChange={(e) => setEducationLevel(e.target.value)}
          />
        </label>
      </div>
      <button type="submit">Delete</button>
    </form>
  );
};

export default DeleteEducation;

  // Handle delete operation
  const handleDelete = async (id) => {
    const confirmDelete = window.confirm('Are you sure you want to delete this row?');
    if (!confirmDelete) return;

    try {
      const response = await fetch(`https://your-api-endpoint.com/data/${id}`, {
        method: 'DELETE',
      });

      if (response.ok) {
        setMessage('Row deleted successfully!');
        setData(data.filter((item) => item.id !== id)); // Remove the deleted item from the local state
      } else {
        setMessage('Failed to delete the row.');
      }
    } catch (error) {
      setMessage('An error occurred during deletion.');
      console.error('Error:', error);
    }
  };

  return (
    <div>
      <h1>Data Table</h1>

      {message && <p>{message}</p>}

      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {data.map((item) => (
            <tr key={item.id}>
              <td>{item.id}</td>
              <td>{item.name}</td>
              <td>{item.email}</td>
              <td>
                <button onClick={() => handleDelete(item.id)}>Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default DataTable;
